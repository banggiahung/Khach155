@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor


@{
    ViewData["Title"] = "Chat";
    Layout = "~/Views/Shared/_Layout.cshtml";
    HttpContext httpContext = HttpContextAccessor.HttpContext;
    string userName = httpContext.Session.GetString("UserName");
}

<h1>Chat</h1>

<div class="container">
    <div class="row p-1">
        <div class="col-1">User</div>
        <div class="col-5"><input type="text" id="userInput" readonly value="@userName" /></div>
    </div>
    <div class="row p-1">
        <div class="col-1">Message</div>
        <div class="col-5"><input type="text" class="w-100" id="messageInput" /></div>
    </div>
    <div class="row p-1">
        <div class="col-6 text-end">
            <input type="button" id="sendButton" value="Send Message" />
        </div>
    </div>
    <div class="row p-1">
        <div class="col-6">
            <hr />
        </div>
    </div>
    <div class="row p-1">
        <div class="col-6">
            <ul id="messagesList"></ul>
        </div>
    </div>
</div>

<script src="~/lib/signalr/dist/browser/signalr.js"></script>
<script>
    "use strict";
    var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();
    //Disable send button until connection is established
    document.getElementById("sendButton").disabled = true;
    //khởi động kết nối
    connection.start().then(function () {
        document.getElementById("sendButton").disabled = false;
        // lấy lịch sử chát với người dùng
        let user = `@Html.Raw(userName)`;

        connection.invoke("HistoryChat", user).catch(function (err) {
            console.error(err.toString());
        });
    }).catch(function (err) {
        return console.error(err.toString());
    });

    connection.on("ReceiveMessage", function (user, message) {
        if (user == `@Html.Raw(userName)`) {
            var li = document.createElement("li");
            document.getElementById("messagesList").appendChild(li);
            li.textContent = `${user} says ${message}`;
        }
    });

    connection.on("ReceiveMessageAdmin", function (user, message) {
        var li = document.createElement("li");
        document.getElementById("messagesList").appendChild(li);
        li.style.color = "red";
        li.textContent = `${user} says ${message}`;
    });

    connection.on("ReceiveMessageHistory", function (user, history) {
        if (user == `@Html.Raw(userName)`) {
            history.forEach(item => {
                var li = document.createElement("li");
                document.getElementById("messagesList").appendChild(li);
                if (item.fromUser == 9) {
                    li.style.color = 'red';
                    li.textContent = `${item.content}`;
                }
                li.textContent = `${item.content}`;
            })
        }
    });

    document.getElementById("sendButton").addEventListener("click", function (event) {
        var user = `@Html.Raw(userName)`;
        var message = document.getElementById("messageInput").value;
        connection.invoke("SendMessage", user, message).catch(function (err) {
            return console.error(err.toString());
        });
        event.preventDefault();
    });
</script>